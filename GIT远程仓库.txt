1,现在我们搭建一个github的远程仓库
我们就在test2.zbit.com 上搭建吧。

首先在linux下创建秘钥对
[root@test2 ~]# ssh-keygen -t rsa -C "test2.zbit.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
8b:82:bc:c5:6e:b3:5f:31:07:83:3b:7e:fb:e7:89:e2 test2.zbit.com
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|       .         |
|      . o        |
|       . o       |
|      o S .      |
| . o . o =       |
|  o + o +        |
|   +o. o.. ...   |
|  ..o+..Eoooo    |
+-----------------+


然后复制id_rsa.pub中的公钥并添加到github中
 cat .ssh/id_rsa.pub 
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAy4tN8PNuksC+aEs9dqVKnALGId/wVLlItg55TdLI7qVL2+n5Snl0TFYBoe4DTlPzIeCDa79AV9Z1KD+hYtIgwQxE5mig0ujEnDgdofHB8Z2ZTfrz/0ub8nbLL0MDkASZH2QBqz+uPelYA7rjUv+XaOyZ1UChtw+S7wqPsTLi4GCVd7dAl5ijg08G3htNgM4yBiuFodiSnyt7MunmVCiXAbQDkM7buDKPDK2RjWS7H8zW6YkIOZ5bqY0wjd8Xt3upqoMiDCYoAXtkG1mzZ9B8xMlnrOeYcRLUXd2RD1lsEfk0HOGAcIoRMt+h0mXrTlL6/ojezJtR4TsFr+kZvIjNMw== test2.zbit.com

注册一个github账号，并登陆
在settings设置中点击SSH keys

添加公钥
一般可能我们在家里和办公室都需要对该文件进行修改，
这样就可以向github添加多个公钥，然后就可以向github上推送文件或者代码的修改了。

提示：
	github上托管的git仓库，任何人都可以看见的，
不要把一些敏感的或者涉及公司机密的文件或者代码放在上面。以防不测发生。


如果你不想别人看见你托管的git仓库。有两种方法：
	1，当然是向github充值，将仓库变为私有的。(别人不可读也不可写)
	2，自己动手搭建一个公司内部的git服务器，可以只允许自己进行代码或文件的提交。
也可以允许小组其他成员进行开发和修改。




2,创建一个github仓库。
现在我们需要将远程主机跟你的github账号关联起来了。
但是远程主机下有活动目录，我们需要在github上创建一个仓库用来跟
远程主机的活动目录进行同步。
这样的话，以后无论你在家还是办公点，你都可以将它从github上pull或者clone下来。
当你进行了相关修改之后，再通过push推上去。

登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库。
在Repository name填入仓库名，这个名字得跟你的远程主机的活动目录相同才能推送成功。
其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库。


在GitHub上的这个learngit仓库还是空的，在创建完仓库时，git会提示我们，
如何向该仓库添加文件或代码。
GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联。
那我们还是选择关联吧，就是将你的远程主机与github关联起来。
ssh -T git@github.com
将git@github.com主机解析信息添加到.ssh/known_hosts中用于解析。

现在在远程主机需要关联的活动目录下。执行
git remote add origin git@github.com:gjkdhr/git.git

由于远程主机是空的，第一次推送master分支时，需要加上-u参数。
git不但会把远程主机的master分支与github上的master分支关联起来。
还会把本地的master分支内容推送到github上的master分支上，

现在就可以进行提交了
git push origin master

提交完成后，刷新github主页，就可以看到远程主机活动目录所推送的文件了。


3，从github上克隆
假设我们现在要进行一个新的项目，我们可以在github上新创建一个项目仓库
github会提示我们要创建一个READM.md的解释说明文件。
我们可以在这个文件说明该项目的一些基本情况。

创建仓库完成之后，我们可以将这个仓库克隆到远程主机上，
一般情况下，打开某个项目仓库，页面会有提示，
用ssh克隆的链接也会出现,我们可以复制克隆链接，将github仓库克隆到远程主机。
git clone git@github:gjkdhr/repolist.git

